// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createConfig defaults 1`] = `
Object {
  "devServer": Object {
    "hot": true,
    "open": true,
    "port": 3300,
  },
  "devtool": "source-map",
  "entry": Object {
    "fs": Array [
      "browserfs",
    ],
  },
  "mode": "test",
  "module": Object {
    "noParse": /browserfs\\\\\\.js/,
    "rules": Array [
      Object {
        "test": /\\\\\\.css\\$/,
        "use": Array [
          Object {
            "loader": "style-loader",
          },
          Object {
            "loader": "css-loader",
            "options": Object {
              "importLoaders": 1,
            },
          },
        ],
      },
      Object {
        "exclude": Array [
          /node_modules\\|\\\\\\.min\\\\\\./,
        ],
        "test": /\\(\\\\\\.js\\$\\)/,
        "use": Array [
          Object {
            "loader": "cache-loader",
          },
          Object {
            "loader": "babel-loader",
          },
        ],
      },
      Object {
        "test": /\\\\\\.styl\\$/,
        "use": Array [
          Object {
            "loader": "style-loader",
          },
          Object {
            "loader": "css-loader",
          },
          Object {
            "loader": "stylus-loader",
          },
        ],
      },
      Object {
        "exclude": Array [
          /node_modules\\|\\\\\\.min\\\\\\./,
        ],
        "test": /\\(\\\\\\.ts\\(x\\?\\)\\$\\)/,
        "use": Array [
          Object {
            "loader": "cache-loader",
          },
          Object {
            "loader": "ts-loader",
            "options": Object {
              "experimentalFileCaching": true,
              "experimentalWatchApi": true,
              "onlyCompileBundledFiles": true,
              "transpileOnly": false,
            },
          },
        ],
      },
      Object {
        "test": /\\\\\\.worker\\\\\\.js\\$/,
        "use": Array [
          Object {
            "loader": "worker-loader",
            "options": Object {
              "fallback": true,
              "inline": false,
            },
          },
        ],
      },
    ],
  },
  "node": Object {
    "Buffer": false,
    "child_process": "empty",
    "dgram": "empty",
    "fs": "empty",
    "net": "empty",
    "tls": "empty",
  },
  "optimization": Object {
    "minimize": true,
    "minimizer": Array [
      TerserPlugin {
        "options": Object {
          "cache": true,
          "cacheKeys": [Function],
          "exclude": Array [
            /\\\\\\.min\\\\\\./g,
          ],
          "extractComments": false,
          "include": undefined,
          "minify": undefined,
          "parallel": true,
          "sourceMap": true,
          "terserOptions": Object {
            "compress": Object {
              "comparisons": false,
              "ecma": 5,
              "inline": 2,
              "warnings": false,
            },
            "mangle": Object {
              "safari10": true,
            },
            "output": Object {
              "ascii_only": true,
              "comments": false,
              "ecma": 5,
            },
            "parse": Object {
              "ecma": 8,
            },
          },
          "test": /\\\\\\.js\\(\\\\\\?\\.\\*\\)\\?\\$/i,
          "warningsFilter": [Function],
        },
      },
    ],
    "runtimeChunk": "single",
    "splitChunks": Object {
      "chunks": "all",
      "name": false,
    },
  },
  "output": Object {
    "filename": "[name].[hash].js",
  },
  "performance": undefined,
  "plugins": Array [
    ProvidePlugin {
      "definitions": Object {
        "BrowserFS": "bfsGlobal",
        "Buffer": "bufferGlobal",
      },
    },
    DefinePlugin {
      "definitions": Object {
        "process.browser": true,
      },
    },
    BugsnagBuildReporterPlugin {
      "build": Object {
        "apiKey": "123",
        "appVersion": "1.1",
        "autoAssignRelease": true,
        "buildTool": "webpack-bugsnag-plugins",
        "releaseStage": "development",
      },
      "options": Object {
        "logLevel": "debug",
        "path": "/bar/foo",
      },
    },
    BugsnagSourceMapUploaderPlugin {
      "apiKey": "123",
      "appVersion": "1.1",
      "endpoint": undefined,
      "overwrite": true,
      "publicPath": "/foo/bar",
    },
    HtmlWebpackPlugin {
      "options": Object {
        "bodyHtml": "",
        "cache": true,
        "chunks": "all",
        "chunksSortMode": "auto",
        "compile": true,
        "env": "{}",
        "excludeChunks": Array [],
        "favicon": false,
        "filename": "index.html",
        "hash": false,
        "headHtml": "",
        "inject": true,
        "meta": Object {},
        "metaHtml": "",
        "minify": false,
        "showErrors": true,
        "template": "/foo",
        "templateParameters": [Function],
        "title": "",
        "xhtml": false,
      },
    },
    MonacoWebpackPlugin {
      "options": Object {
        "features": Array [
          Object {
            "entry": "vs/editor/standalone/browser/accessibilityHelp/accessibilityHelp",
            "label": "accessibilityHelp",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/bracketMatching/bracketMatching",
            "label": "bracketMatching",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/caretOperations/caretOperations",
            "label": "caretOperations",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/clipboard/clipboard",
            "label": "clipboard",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/codeAction/codeActionContributions",
            "label": "codeAction",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/codelens/codelensController",
            "label": "codelens",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/colorPicker/colorDetector",
            "label": "colorDetector",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/comment/comment",
            "label": "comment",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/browser/controller/coreCommands",
            "label": "coreCommands",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/cursorUndo/cursorUndo",
            "label": "cursorUndo",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/dnd/dnd",
            "label": "dnd",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/find/findController",
            "label": "find",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/folding/folding",
            "label": "folding",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/format/formatActions",
            "label": "format",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/gotoError/gotoError",
            "label": "gotoError",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/standalone/browser/quickOpen/gotoLine",
            "label": "gotoLine",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/hover/hover",
            "label": "hover",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/inPlaceReplace/inPlaceReplace",
            "label": "inPlaceReplace",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/standalone/browser/inspectTokens/inspectTokens",
            "label": "inspectTokens",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/linesOperations/linesOperations",
            "label": "linesOperations",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/links/links",
            "label": "links",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/multicursor/multicursor",
            "label": "multicursor",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/parameterHints/parameterHints",
            "label": "parameterHints",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/standalone/browser/quickOpen/quickCommand",
            "label": "quickCommand",
            "worker": undefined,
          },
          Object {
            "entry": Array [
              "vs/editor/contrib/referenceSearch/referenceSearch",
              "vs/editor/standalone/browser/referenceSearch/standaloneReferenceSearch",
            ],
            "label": "referenceSearch",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/rename/rename",
            "label": "rename",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/smartSelect/smartSelect",
            "label": "smartSelect",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/snippet/snippetController2",
            "label": "snippets",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/suggest/suggestController",
            "label": "suggest",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/standalone/browser/toggleHighContrast/toggleHighContrast",
            "label": "toggleHighContrast",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/caretOperations/transpose",
            "label": "transpose",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/wordHighlighter/wordHighlighter",
            "label": "wordHighlighter",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/wordOperations/wordOperations",
            "label": "wordOperations",
            "worker": undefined,
          },
          Object {
            "entry": "vs/editor/contrib/wordPartOperations/wordPartOperations",
            "label": "wordPartOperations",
            "worker": undefined,
          },
        ],
        "languages": Array [
          Object {
            "alias": undefined,
            "entry": Array [
              "vs/basic-languages/css/css.contribution",
              "vs/language/css/monaco.contribution",
            ],
            "label": "css",
            "worker": Object {
              "entry": "vs/language/css/css.worker",
              "fallback": "vs/language/css/cssWorker",
              "id": "vs/language/css/cssWorker",
              "output": "css.worker.js",
            },
          },
          Object {
            "alias": undefined,
            "entry": Array [
              "vs/basic-languages/html/html.contribution",
              "vs/language/html/monaco.contribution",
            ],
            "label": "html",
            "worker": Object {
              "entry": "vs/language/html/html.worker",
              "fallback": "vs/language/html/htmlWorker",
              "id": "vs/language/html/htmlWorker",
              "output": "html.worker.js",
            },
          },
          Object {
            "alias": undefined,
            "entry": "vs/basic-languages/javascript/javascript.contribution",
            "label": "javascript",
            "worker": undefined,
          },
          Object {
            "alias": undefined,
            "entry": "vs/language/json/monaco.contribution",
            "label": "json",
            "worker": Object {
              "entry": "vs/language/json/json.worker",
              "fallback": "vs/language/json/jsonWorker",
              "id": "vs/language/json/jsonWorker",
              "output": "json.worker.js",
            },
          },
          Object {
            "alias": undefined,
            "entry": "vs/basic-languages/markdown/markdown.contribution",
            "label": "markdown",
            "worker": undefined,
          },
          Object {
            "alias": undefined,
            "entry": "vs/basic-languages/xml/xml.contribution",
            "label": "xml",
            "worker": undefined,
          },
          Object {
            "alias": undefined,
            "entry": "vs/basic-languages/yaml/yaml.contribution",
            "label": "yaml",
            "worker": undefined,
          },
        ],
        "output": "",
      },
    },
    HashedModuleIdsPlugin {
      "options": Object {
        "context": null,
        "hashDigest": "base64",
        "hashDigestLength": 4,
        "hashFunction": "md4",
      },
    },
    WebpackBarPlugin {
      "handler": [Function],
      "modulesCount": 500,
      "options": Object {
        "color": "green",
        "name": "stoplight",
        "profile": undefined,
        "reporter": null,
        "reporters": Array [
          "basic",
        ],
      },
      "profile": false,
      "reporters": Array [
        SimpleReporter {},
      ],
      "showActiveModules": true,
      "showEntries": false,
      "showModules": true,
    },
    Object {
      "apply": [Function],
    },
    HotModuleReplacementPlugin {
      "fullBuildTimeout": 200,
      "multiStep": undefined,
      "options": Object {},
      "requestTimeout": 10000,
    },
    Object {
      "BundleAnalyzerPlugin": [Function],
      "start": [Function],
    },
  ],
  "resolve": Object {
    "alias": Object {
      "buffer": "browserfs/dist/shims/buffer.js",
      "bufferGlobal": "browserfs/dist/shims/bufferGlobal.js",
      "fs": "browserfs/dist/shims/fs.js",
      "monaco-editor": "monaco-editor/esm/vs/editor/editor.api.js",
      "path": "browserfs/dist/shims/path.js",
      "processGlobal": "browserfs/dist/shims/process.js",
    },
    "extensions": Array [
      ".js",
      ".json",
      ".css",
      ".stylus",
      ".tsx",
      ".ts",
    ],
  },
  "watchOptions": Object {
    "ignored": /node_modules\\|dist/,
  },
}
`;
